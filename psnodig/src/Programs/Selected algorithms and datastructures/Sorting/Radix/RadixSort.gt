func RadixSort(A list) {
    @{d $\gets$ number of digits in the greatest number}{
        biggestnumber := -1
        for i := A {
            if i > biggestnumber {
                biggestnumber := i
            }
        }
        d := length(toString(biggestnumber))
    }

    -- dette funker ikke helt fordi vi bare 
    for i := d, 0 {
        A := BucketSort(A)
    }
    return A
}

func BucketSort(A list) {
    # N := length(A)

    @{B $\gets$ Array of N empty lists}{ // teknisk sett N+1
        B := []
        for i := 0, N {
            append([], B)
        }
    }
    # n := length(A)
    for i := 0, n - 1 {
        @{associate k with A[i]}{
            k := floor(A[i] / 10)
        }
        append(A[i], B[k])
    }

    # N' := length(B)
    for i := 0, N'-1 {
        B[i] := InsertionSort(B[i])
    }

    j := 0
    for k := 0, N - 1 {
        for x := B[k] {
            A[j] := x
            j := j + 1
        }
    }

    return A
}

func InsertionSort(A list) {
    # n := length(A)
    if n < 2 {
        return A
    }

    for i := 1, n - 1 {
        j := i
        while (j > 0) && (A[j-1] > A[j]) {
            @{swap(A[j] and A[j-1])}{
                tmp := A[j]
                A[j] := A[j-1]
                A[j-1] := tmp
            }
            j := j - 1
        }
    }

    return A
}


func f() {
    a := [64, 25, 12, 22, 11, 90, 77, 55, 44]
    print(a)

    a := RadixSort(a)
    print(a)

    return 1
}

f()
